{
	"name": "Expo cli 3",
	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"msjsdiag.vscode-react-native"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [19000, 19001],
	
	// [Optional] To reuse of your local HTTPS dev cert, first export it locally using this command:
	//  * Windows PowerShell:
	//     dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//  * macOS/Linux terminal:
	//     dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//
	// Next, after running the command above, uncomment lines in the 'mounts' and 'remoteEnv' lines below,
	// and open / rebuild the container so the settings take effect.
	//
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
	"workspaceFolder": "/workspace",
	"mounts": [
		"source=try-node-node_modules,target=/workspace/node_modules,type=volume"
	],
	"initializeCommand" :["${localWorkspaceFolder}/.devcontainer/setmyip.cmd"],
	"remoteEnv": {
		"ADB_IP": "${localEnv:MY_IP_ADDRESS}",
		"REACT_NATIVE_PACKAGER_HOSTNAME": "${localEnv:MY_IP_ADDRESS}",
	},

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "yarn --network-timeout 100000",

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}